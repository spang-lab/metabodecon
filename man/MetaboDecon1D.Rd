% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/80_old_metabodecon1d.R
\name{MetaboDecon1D}
\alias{MetaboDecon1D}
\title{Deconvolute 1D NMR spectrum}
\usage{
MetaboDecon1D(
  filepath,
  filename = NA,
  file_format = "bruker",
  number_iterations = 10,
  range_water_signal_ppm = 0.1527692,
  signal_free_region = c(11.44494, -1.8828),
  smoothing_param = c(2, 5),
  delta = 6.4,
  scale_factor = c(1000, 1e+06),
  debug = FALSE
)
}
\arguments{
\item{filepath}{Complete path of the file folder (Notice for Bruker format: filepath need to be the spectrum folder containing one or more different spectra (e.g."C:/Users/Username/Desktop/spectra_from_bruker"))}

\item{filename}{Name of the NMR file. (Notice for Bruker format: filename need to be the name of your spectrum which is also the name of the folder) (Default: filename = NA to analyze more spectra at once)}

\item{file_format}{Format (bruker or jcampdx) of the NMR file. (Default: file_format = "bruker")}

\item{number_iterations}{Number of iterations for the approximation of the parameters for the Lorentz curves (Default: number_iterations=10)}

\item{range_water_signal_ppm}{Half width of the water artefact in ppm (Default: range_water_signal=0.1527692 (e.g. for urine NMR spectra))}

\item{signal_free_region}{Row vector with two entries consisting of the ppm positions for the left and right border of the signal free region of the spectrum. (Default: signal_free_region=c(11.44494, -1.8828))}

\item{smoothing_param}{Row vector with two entries consisting of the number of smoothing repeats for the whole spectrum and the number of data points (uneven) for the mean calculation (Default: smoothing_param=c(2,5))}

\item{delta}{Defines the threshold value to distinguish between signal and noise (Default: delta=6.4)}

\item{scale_factor}{Row vector with two entries consisting of the factor to scale the x-axis and the factor to scale the y-axis (Default: scale_factor=c(1000,1000000))}

\item{debug}{Logical value to activate the debug mode (Default: debug=FALSE)}
}
\value{
List containing
\itemize{
\item \code{filename}: Name of the analyzed spectrum.
\item \code{x_values}: Scaled datapoint numbers (SDP). Datapoints are numbered in descending order going from N to 0, where N equals the . Scaled data point numbers are obtained by dividing these numbers by the scale factor of the x-axis. I.e., for a spectrum with 131072 datapoints and a scale factor of 1000, the first scale datapoint has value 131.071 and the last one has value 0.
\item \code{x_values_ppm}: The chemical shift of each datapoint in ppm (parts per million).
\item \code{y_values}: The scaled signal intensity (SSI) of each datapoint. Obtained by reading the raw intensity values from the provided \code{data_path} as integers and dividing them scale factor of the y-axis.
\item \code{spectrum_superposition}: Scaled signal intensity obtained by calculating the sum of all estimated Lorentz curves for each data point.
\item \code{mse_normed}: Normalized mean squared error. Calculated as \mjeqn{\frac{1}{n} \sum_{i=1}^{n} (z_i - \hat{z}_i)^2}{1/n * sum((z_i - zhat_i)^2)} where \mjeqn{z_i}{z_i} is the normalized, smoothed signal intensity of data point i and \mjeqn{\hat{z}_i}{zhat_i} is the normalized superposition of Lorentz curves at data point i. Normalized in this context means that the vectors were scaled so the sum over all data points equals 1.
\item \code{peak_triplets_middle}: Chemical shift of peak centers in ppm.
\item \code{peak_triplets_left}: Chemical shift of left peak borders in ppm.
\item \code{peak_triplets_right}: Chemical shift of right peak borders in ppm.
\item \code{index_peak_triplets_middle}: Datapoint numbers of peak centers.
\item \code{index_peak_triplets_left}: Datapoint numbers of left peak borders.
\item \code{index_peak_triplets_right}: Datapoint numbers of right peak borders.
\item \code{integrals}: Integrals of the Lorentz curves.
\item \code{signal_free_region}: Borders of the signal free region of the spectrum in scaled datapoint numbers. Left of the first element and right of the second element no signals are expected.
\item \code{range_water_signal_ppm}: Half width of the water signal in ppm. Potential signals in this region are ignored.
\item \code{A}: Amplitude parameter of the Lorentz curves. Provided as negative number to maintain backwards compatibility with MetaboDecon1D. The area under the Lorentz curve is calculated as \mjeqn{A \cdot \pi}{A * pi}.
\item \code{lambda}: Half width of the Lorentz curves in scaled data points. Provided as negative value to maintain backwards compatibility with MetaboDecon1D. Example: a value of -0.00525 corresponds to 5.25 data points. With a spectral width of 12019 Hz and 131072 data points this corresponds to a halfwidth at half height of approx. 0.48 Hz. The corresponding calculation is: (12019 Hz / 131071 dp) * 5.25 dp.
\item \code{x_0}: Center of the Lorentz curves in scaled data points.
}

\bold{Notice:} The parameters A, lambda and x_0 to calculate the Lorentz curves are saved in parameters.txt and the approximated spectrum is saved in approximated_spectrum.txt under the file path.
}
\description{
\loadmathjax
Automatic deconvolution of a 1D NMR spectrum into several Lorentz curves and the integration of them. The NMR file needs to be in Bruker format or jcamp-dx format.

Deprecated since metabodecon v1.2.0. Please use \code{\link[=generate_lorentz_curves]{generate_lorentz_curves()}} instead. See examples below for usage.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
}
\details{
A list with parameters \code{A}, \code{lambda} and \code{x_0} required to calculate the Lorentz curves. The Lorentz curves could be calculated by using the function \code{\link[=calculate_lorentz_curves]{calculate_lorentz_curves()}}. This returns a matrix containing the generated and approximated Lorentz curves for each real peak of the spectrum. Each row of the matrix depicts one Lorentz curve. The Lorentz curves could be visualised and saved by using the function \code{\link[=plot_lorentz_curves_save_as_png]{plot_lorentz_curves_save_as_png()}}. The superposition of all Lorentz curves, which reconstructs the original spectrum, could be visualised and saved with function \link{plot_spectrum_superposition_save_as_png(}). For the analytical calculation of the Lorentz curves peak triplets for each peak are used. To visualise these peak triplets and to illustrate the impact of the threshold \code{delta} the function \code{plot_triplets()} is available. The integral values for each generated Lorentz curves are saved in a vector.

\bold{Notice}: It is feasible to load all spectra of a folder at once. Here the filename needs to be "NA" which is the default value. One selected spectrum could then be used to adjust the parameters (\code{signal_free_region} and \code{range_water_signal_ppm}) for the analysis of all spectra. Furthermore it is possible to adjust these parameters for each spectrum separate.
}
\examples{
\donttest{
xds_path <- download_example_datasets()
urine <- file.path(xds_path, "bruker/urine")
urine_1 <- file.path(urine, "urine_1")

\dontrun{
# Deprecated since metabodecon v1.2.0. Please use generate_lorentz_curves()
# instead. Shown below.
urine_1_deconv <- MetaboDecon1D(urine, "urine_1")
urine_all_deconv <- MetaboDecon1D(urine)
}

urine_1_deconv <- generate_lorentz_curves(urine_1, ask = FALSE)
urine_all_deconv <- generate_lorentz_curves(urine, ask = FALSE)
}
}
\references{
Haeckl, M.; Tauber, P.; Schweda, F.; Zacharias, H.U.; Altenbuchinger, M.; Oefner, P.J.; Gronwald, W. An R-Package for the Deconvolution and Integration of 1D NMR Data: MetaboDecon1D. Metabolites 2021, 11, 452. https://doi.org/10.3390/metabo11070452
}
\seealso{
\code{\link[=calculate_lorentz_curves]{calculate_lorentz_curves()}}, \code{\link[=plot_triplets]{plot_triplets()}}, \code{\link[=plot_lorentz_curves_save_as_png]{plot_lorentz_curves_save_as_png()}}, \code{\link[=plot_spectrum_superposition_save_as_png]{plot_spectrum_superposition_save_as_png()}}
}
\author{
Martina Haeckl, Tobias Schmidt
}
