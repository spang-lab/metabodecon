% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/20_spectrum.R
\name{read_spectrum}
\alias{read_spectrum}
\title{Read a spectrum from Disk}
\usage{
read_spectrum(
  data_path = metabodecon_file("bruker/sim/sim_01"),
  file_format = "bruker",
  expno = 10,
  procno = 10,
  raw = FALSE,
  silent = TRUE,
  force = FALSE
)
}
\arguments{
\item{data_path}{The path of the file/folder containing the spectrum data. E.g. \code{"example_datasets/jcampdx/urine/urine_1.dx"} or \code{"example_datasets/bruker/urine/urine"}.}

\item{file_format}{The file_format of the spectrum file. E.g. \code{"bruker"} or \code{"jcampdx"}.}

\item{expno, procno}{The experiment/processing number for the file. E.g. \code{"10"}. Only relevant if \code{file_format} equals \code{"bruker"}. For details see section \href{https://spang-lab.github.io/metabodecon/articles/FAQ.html#file-structure}{File Structure} in the metabodecon FAQ.}

\item{raw}{If \code{FALSE}, scales the returned signal intensities based on information available in the spectrum metadata, in particular \code{NC_proc}. For details see \code{processing-reference.pdf}, available at \url{https://www.bruker.com/en.html} at section 'Services & Support > Documentation & Manuals > Magnetic Resonance > Acquisition & Processing > TopSpin Processing Commands and Parameters' (requires login).}

\item{silent}{If \code{TRUE}, no output will be printed to the console.}

\item{force}{If \code{TRUE}, try to continue when encountering errors and print info messages instead. To hide these messages as well, set \code{silent = TRUE}.}
}
\value{
A \code{spectrum} object as described in \href{https://spang-lab.github.io/metabodecon/articles/Metabodecon-Classes.html}{Metabodecon Classes}.
}
\description{
Read a single spectrum file or folder from disk and return it as \code{spectrum} object.
}
\examples{
urine <- system.file("example_datasets/bruker/urine", package = "metabodecon")
urine_1 <- file.path(urine, "urine_1")
urine_2 <- file.path(urine, "urine_2")
X1 <- read_spectrum(urine_1)
X2 <- read_spectrum(urine_2)
XX <- read_spectra(urine)
str(XX)
str(X1)
stopifnot(all.equal(X1, XX$urine_1))
# Below code shows how a spectrum stored in JCAMP-DX format can be read.
# Reading files in this format is very slow (about 30s on the development
# machine). So if possible, you should stick with the original Bruker
# data storage format.
\dontrun{
urine_1_dx <- system.file("example_datasets/jcampdx/urine/urine_1.dx", package = "metabodecon")
X1_dx <- read_spectrum(urine_1_dx, file_format = "jcampdx")
stopifnot(all.equal(X1, X1_dx))
}
}
\seealso{
Other {spectrum functions}: 
\code{\link{make_spectrum}()}
}
\concept{{spectrum functions}}
