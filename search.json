[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"/TODOS.html","id":null,"dir":"","previous_headings":"","what":"1. Feature: Batch Mode","title":"1. Feature: Batch Mode","text":"batch mode, steps truly automatically creates pdf containing quality control images. pdf can inspected later based findings function call can adjusted.","code":""},{"path":"/TODOS.html","id":"id_2-feature-parallelize","dir":"","previous_headings":"","what":"2. Feature: Parallelize","title":"1. Feature: Batch Mode","text":"Batch mode can also run parallel speed calculations. Instead waiting 1h need wait 3 6 minutes .","code":""},{"path":"/TODOS.html","id":"id_3-feature-add-test-suite-to-ensure-correct-behaviour-after-updates","dir":"","previous_headings":"","what":"3. Feature: add test suite to ensure correct behaviour after updates","title":"1. Feature: Batch Mode","text":"Write test cases every function ensure future updates don’t break existing behaviour. Tests run automatically upon pull requests pushes main.","code":""},{"path":"/TODOS.html","id":"id_4-feature-add-minimal-example-dataset","dir":"","previous_headings":"","what":"4. Feature: add minimal example dataset","title":"1. Feature: Batch Mode","text":"Add minimal dataset package, user can run examples without download full example data. minimal dataset smaller 1MB. Idea: remove every second third datapoint two example spectra, enough get 1MB.","code":""},{"path":"/TODOS.html","id":"id_5-feature-use-temp-dirs-for-full-example-data","dir":"","previous_headings":"","what":"5. Feature: use temp dirs for full example data","title":"1. Feature: Batch Mode","text":"Function download_example_data allow users specify temp dir instead usual XDG directory. useful pass CRAN checks CRAN doesn’t allow writing th user’ home directory.","code":""},{"path":"/TODOS.html","id":"id_6-fix-generate_lorentz_curves-should-not-write-to-input-folders-by-default","dir":"","previous_headings":"","what":"6. Fix: generate_lorentz_curves should not write to input folders by default","title":"1. Feature: Batch Mode","text":"Function generate_lorentz_curves write input folders default. Instead, generated output files stored inside folder ${cwd}/metabodecon_output default option change path.","code":""},{"path":"/TODOS.html","id":"id_7-fix-fix-name-of-samples-in-blood-dataset","dir":"","previous_headings":"","what":"7. Fix: fix name of samples in blood dataset","title":"1. Feature: Batch Mode","text":"Blood Bood.","code":""},{"path":"/TODOS.html","id":"id_8-refactor-text-output","dir":"","previous_headings":"","what":"8. Refactor: Text Output","title":"1. Feature: Batch Mode","text":"output improved. License printed every function execution, unless strong reason . Timestamps added output, user automatically rough idea long function take finish.","code":""},{"path":"/TODOS.html","id":"id_9-refactor-plotting-defaults","dir":"","previous_headings":"","what":"9. Refactor: Plotting defaults","title":"1. Feature: Batch Mode","text":"Function plot_triplets store file default. offer option store file convenience, shouldn’t png print file path.","code":""},{"path":"/TODOS.html","id":"id_10-refactor-plotting-speed","dir":"","previous_headings":"","what":"10. Refactor: Plotting speed","title":"1. Feature: Batch Mode","text":"Function plot_lorentz_curves_save_as_png suuuuper slow. try make quicker.","code":""},{"path":"/TODOS.html","id":"id_11-fix-cran-review-finding-0","dir":"","previous_headings":"","what":"11. Fix CRAN review finding 0","title":"1. Feature: Batch Mode","text":"Omit redundant “Functions ” title.","code":""},{"path":"/TODOS.html","id":"id_12-fix-cran-review-finding-1","dir":"","previous_headings":"","what":"12. Fix CRAN review finding 1","title":"1. Feature: Batch Mode","text":"start description “Functions ”, “package”, package name, title similar.","code":""},{"path":"/TODOS.html","id":"id_13-fix-cran-review-finding-2","dir":"","previous_headings":"","what":"13. Fix CRAN review finding 2","title":"1. Feature: Batch Mode","text":"Always explain acronyms description text. e.g.: NMR","code":""},{"path":"/TODOS.html","id":"id_14-fix-cran-review-finding-3","dir":"","previous_headings":"","what":"14. Fix CRAN review finding 3","title":"1. Feature: Batch Mode","text":"Write references description DESCRIPTION file form authors (year) <doi:...> space ‘doi:’ angle brackets auto-linking. (want add title well please put quotes: “Title”)","code":""},{"path":"/TODOS.html","id":"id_15-fix-cran-review-finding-4","dir":"","previous_headings":"","what":"15. Fix CRAN review finding 4","title":"1. Feature: Batch Mode","text":"Please add \\value .Rd files regarding exported methods explain functions results documentation. Please write structure output (class) also output means. (function return value, please document , e.g. \\value{return value, called side effects} similar). Missing Rd-tags 11 .Rd files, e.g.: combine_peaks.Rd: \\value, dohCluster.Rd: \\value, …","code":""},{"path":"/TODOS.html","id":"id_16-fix-cran-review-finding-5","dir":"","previous_headings":"","what":"16. Fix CRAN review finding 5","title":"1. Feature: Batch Mode","text":"examples unexported functions. Please either omit examples export functions. Examples unexported function example: plot_spectrum_superposition_save_as_png().","code":""},{"path":"/TODOS.html","id":"id_17-fix-cran-review-finding-6","dir":"","previous_headings":"","what":"17. Fix CRAN review finding 6","title":"1. Feature: Batch Mode","text":"addition, see: “Unexecutable code vignettes/metabodecon.Rmd”: # \"2)\" instead afterwards, guess.","code":""},{"path":"/TODOS.html","id":"id_18-fix-cran-review-finding-7","dir":"","previous_headings":"","what":"18. Fix CRAN review finding 7","title":"1. Feature: Batch Mode","text":"Remove dontrun examples executable < 5 sec, create additionally small toy examples allow automatic testing < 5 sec. Reason: \\dontrun{} used example really executed user, e.g. missing additional software, missing API keys, etc. ’s wrapping examples \\dontrun{} adds comment (“# run:”) warning user. Alternative: also replace \\dontrun{} \\donttest, takes longer 5 sec executed, preferable automatic checks functions. Otherwise, can also write tests.","code":""},{"path":"/TODOS.html","id":"id_19-fix-cran-review-finding-8","dir":"","previous_headings":"","what":"19. Fix CRAN review finding 8","title":"1. Feature: Batch Mode","text":"Please ensure functions write default examples/vignettes/tests user’s home filespace (including package directory getwd()). allowed CRAN policies. Please omit default path writing functions. examples/vignettes/tests can write tempdir().","code":""},{"path":"/TODOS.html","id":"id_20-fix-cran-review-finding-9","dir":"","previous_headings":"","what":"20. Fix CRAN review finding 9","title":"1. Feature: Batch Mode","text":"Please make sure change user’s options, par working directory. really within functions, please ensure immediate call .exit() settings reset function exited. E.g. R/MetaboDecon1D.R. ’re familiar function, please check ?.exit. function makes possible restore options exiting function even function breaks. Therefore needs called immediately option change within function.","code":""},{"path":"/TODOS.html","id":"id_21-refactor-improve-output-description-of-metabodecon1d","dir":"","previous_headings":"","what":"21. Refactor: Improve output description of Metabodecon1D","title":"1. Feature: Batch Mode","text":"Original Teams Message Wolfram 2023/11/08 3:29 PM Hi Tobi, es kommen ja letzter Zeit eine ganze Menge Fragen zu MetaboDecon auch nach den Variablen im Output. Ich hab hier eine Zusammenstellung dieser Variablen gemacht, vielleicht können wir das auch noch einbauen? Viele Grüße Wolfram Output variables MetaboDecon1D (variables obtained analyzed spectrum): Number_of_files: number analyzed spectra (case folder contains one spectrum value >1). Filename: name analyzed spectrum X_values: data points original spectrum numbered descending order. first data point maximum value last one value 0. example 131072 (128k) datapoints, first value 131.071. Note numbers divided scale factor default value 1000 x_axis. X_values_ppm: corresponding ppm values provided. Y_values: intensities original datapoints Spectrum_superposition: y-values superposition estimated Lorentzcurves, values provided point-wise manner. Mse_normed: final mean-squared-error optimization Lorentz curves. Index_peak_triplets_middle: identified signal defined three data points. middle data point given. Note, numbering starts ascending order left right. Index_peak_triplets_left: left data point. Index_peak_triplets_right: right data point. Peak_triplets_middle: identified signal position middle data point given ppm, order left right. Peak_triplets_right: right data point Peak_triplets_left: left datapoint. Integrals: integrals deconvoluted signals left right . Signal_free_region: e.g., 109.03619, 21.79452, left right borders signals expected. Values points like x_values 5 instead 3 decimals. Range_water_signal_ppm: half width water signal region .e., signals identified ppm, example 0.15 ppm. : -*p area Lorentz-curve, see also integrals, always provided negative number. Lambda: identified signals half width half height. provided negative value data points divided scale-factor .e., 1000. example, value von 0.00525 corresponds 5.25 data points. spectral width 12019 Hz (example) 31072 data points corresponds half linewidth half height 0.48 Hz. X_0: center estimated Lorentz curves. Provided data points divided scale factor (see also x_values). Scale_factor: scale factor x- y-axis reduce numerical instabilities, default 1000 1000000. Toy example TSP signal (note numbers differ spectrum): TSP signal 979, index_peak_triplets_middle[979]=96955, x_0[979]=34.11715 (Note (131072-96955)/1000=34.117), peak_triplets_middle=0.000 ppm, lambda[979]=-0.00525 corresponds 0.48 Hz. [979]=-1.218312; * Pi=-3.82, integrals[979]=3.82","code":""},{"path":"/TODOS.html","id":"id_22-refactor-improve-output-of-metabodecon","dir":"","previous_headings":"","what":"22. Refactor: improve output of metabodecon","title":"1. Feature: Batch Mode","text":"Original Teams Messages: Wolfram 2023/11/08 3:29 PM Hi Tobi, ich würde MetaboDecon gerne noch um ca zwei-drei Zeilen Code erweitern. wir geben für jedes Signal einen lambda Wert , das ist die halbe Signalbreite auf halber Höhe. Dieser Wert wird Datenpunkten angegeben. Für viele Anwendungen braucht man diesen Wert aber auch Hertz d.h. ich würde auch die lamda Werte Hertz angeben die Umwandlung ist ganz einfach. Wolfram 2023/11/16 10:50 Hi Tobi hier ist der Code zur Linienbreitenberechnung Hz, Achtung ich hab hier immer die gesamte Linienbreite auf halber Höhe berechnet","code":"# Function to compute the linewidh for all detected features in Hz baed on the original # values given in points # lw_hz = line width in Hz # sw_hz = spectral width in hz # dp datapoints return_path=c(\"C:/Users/Gronwald/Metabolomics/Statistics/Deconvolution/Rechnungen_wolfram/Alex_Ref_metabolites_in_Water/\")  lw_hz <- function(spectrum_data, sw_hz) {    for (entry in spectrum_data)    {       dp<-entry$x_values[1]*1000+1 # multipy  with 1000 (scale factor) and add 1 as last datapoint has index 0       cat(\"dp=\",dp,\"\\n\")       # multiply with 1000 (sale factor)       # multiply with 2 to get full linewidth instead of half-linewidth       # take abs as original lambda is given in negative values       entry$lambda_hz<-abs((sw_hz/dp)*entry$lambda*1000*2)       cat(\"lambda= \",entry$lambda_hz[5],\"\\n\") # random signal to show that everything works       entry$rl1<-data.frame(entry$peak_triplets_middle,entry$lambda_hz)       entry$rl2<-data.frame(entry$rl1,t(entry$integrals))       ret_nam<-paste(return_path,entry$filename,\"_lw.csv\", sep=\"\")       write.csv2(entry$rl2,file=ret_nam)    } }"},{"path":[]},{"path":"/articles/FAQ.html","id":"water-artifact","dir":"Articles","previous_headings":"FAQ","what":"Water Artifact","title":"FAQ","text":"Question: choose n Water artefact fully inside red vertical lines? (y/n), metabodecon asks Choose another half width range (ppm) water artefact, instead left right borders. enter ?  Answer: water signal always centered Bruker, specify half width range make water area around midpoint wider narrower.","code":""},{"path":"/articles/FAQ.html","id":"parameter-optimization","dir":"Articles","previous_headings":"FAQ","what":"Parameter Optimization","title":"FAQ","text":"Question: exactly 10 iterations parameter optimization? Answer: value determined empirically. found 10 iterations enough get good fit iterations improve fit significantly, take longer. Obviously, objective stopping criterion better likely implemented future version.","code":""},{"path":"/articles/FAQ.html","id":"file-structure","dir":"Articles","previous_headings":"FAQ","what":"File Structure","title":"FAQ","text":"Question: file structure expected bruker jcampdx formats? Answer: expected file structure follows:","code":"C:/bruker/urine           # data_path (user input) ├── urine_1/              # name (user input) │   └── 10/               # spectroscopy_value (user input) │       └── pdata/        # processings_dir (constant) │           └── 10/       # processing_value (user input) │               └── procs # spectrum_file (constant) ├── urine_2/... └── ... C:/jcampdx/urine # data_path (user input) ├── urine_1.dx   # spectrum_file (user input) ├── urine_2.dx └── ..."},{"path":"/articles/MetaboDecon1D.html","id":"metabodecon1d-usage-example","dir":"Articles","previous_headings":"","what":"Metabodecon1D Usage Example","title":"MetaboDecon1D","text":"MetaboDecon1D package predecessor package can downloaded uni-regensburg.de/medicine/functional-genomics/staff/prof-wolfram-gronwald/software. include usage example can easily reference old behaviour point added features metabodecon.","code":""},{"path":"/articles/MetaboDecon1D.html","id":"install-the-package","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Install the package","title":"MetaboDecon1D","text":"Open following link browser: uni-regensburg.de/medicine/functional-genomics/staff/prof-wolfram-gronwald/software Click MetaboDecon1D: R-package Deconvolution Integration 1D NMR data Download MetaboDecon1D_0.2.2.tar.gz Start R session enter command install.packages(\"C:/Users/tobi/Downloads/MetaboDecon1D_0.2.2.tar.gz\", repos = NULL, type = \"source\") (replace C:/Users/tobi/Downloads/MetaboDecon1D_0.2.2.tar.gz path downloaded file computer)","code":""},{"path":"/articles/MetaboDecon1D.html","id":"load-package","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Load package","title":"MetaboDecon1D","text":"","code":"library(MetaboDecon1D)"},{"path":"/articles/MetaboDecon1D.html","id":"deconvolute-one-spectrum-in-bruker-format","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Deconvolute one spectrum in Bruker format","title":"MetaboDecon1D","text":"","code":"result <- MetaboDecon1D(     filepath = \"load_example_path\",     filename = \"example_human_urine_spectrum\",     file_format = \"bruker\" )"},{"path":"/articles/MetaboDecon1D.html","id":"visualize-results-and-store-plots-as-png","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Visualize results and store plots as png","title":"MetaboDecon1D","text":"","code":"str(result) plot_triplets(result) plot_lorentz_curves_save_as_png(result) plot_spectrum_superposition_save_as_png(result)"},{"path":"/articles/MetaboDecon1D.html","id":"deconvolute-one-spectrum-in-jcamp-dx-format","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Deconvolute one spectrum in jcamp-dx format","title":"MetaboDecon1D","text":"","code":"result <- MetaboDecon1D(     filepath = \"load_example_path\",     filename = \"example_human_urine_spectrum.dx\",     file_format = \"jcampdx\" ) str(result)"},{"path":"/articles/MetaboDecon1D.html","id":"deconvolute-multiple-spectra-in-bruker-format","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Deconvolute multiple spectra in Bruker format","title":"MetaboDecon1D","text":"","code":"result <- MetaboDecon1D(     filepath = \"load_example_path\",     file_format = \"bruker\" ) str(result)"},{"path":"/articles/MetaboDecon1D.html","id":"deconvolute-multiple-spectra-in-jcamp-dx-format","dir":"Articles","previous_headings":"Metabodecon1D Usage Example","what":"Deconvolute multiple spectra in jcamp-dx format","title":"MetaboDecon1D","text":"","code":"jcamp_results <- MetaboDecon1D(     filepath = \"load_example_path\",     file_format = \"jcampdx\" ) plot_triplets(jcamp_results) plot_lorentz_curves_save_as_png(jcamp_results) plot_spectrum_superposition_save_as_png(jcamp_results)"},{"path":"/articles/metabodecon.html","id":"introduction-to-metabodecon","dir":"Articles","previous_headings":"","what":"Introduction to metabodecon","title":"metabodecon","text":"goal metabodecon make deconvolution alignment 1D NMR spectra easy possible. deconvolution part uses codebase MetaboDecon1D. alignment deconvoluted spectra done using functions speaq package (Beirnaert et al., 2018) adapted metabodecon.","code":""},{"path":"/articles/metabodecon.html","id":"download-the-example-data","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Download the example data","title":"metabodecon","text":"metabodecon repository contains two example datasets: blood1 urine. blood dataset contains 16 1D CPMG NMR spectra blood plasma Bruker format. urine dataset contains two 1D NOESY NMR spectra urine. spectra available Bruker jcamp-dx format. Due size constraints R packages, datasets included default package installed, must explicitly downloaded afterwards via command download_example_datasets().","code":"library(metabodecon) download_example_datasets(persistent = FALSE) # Set persistent to TRUE to keep the data after the R session ends"},{"path":"/articles/metabodecon.html","id":"use-metabodecon-to-convert-a-spectrum-into-lorentz-curves","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Use metabodecon to convert a spectrum into Lorentz curves","title":"metabodecon","text":"calling function generate_lorentz_curves(), R request interactive input user. Note data path .e. folder samples spectra stored given data_path argument. samples folder automatically analyzed. Therefore, specify individual sample names. specify spectrum processing sample used. answers give provided examples written bold: name subfolder filepath? different spectra sample specified numbers, specify spectrum used (e.g. 10 C:/Users/Username/Desktop/spectra_folder/spectrum_name/10) 10 name subsubsubfolder filepath? spectrum can processed different settings, computations stored different number (e.g. 10 C:/Users/Username/Desktop/spectra_folder/spectrum_name/10/pdata/10): 10 case one spectrum analyzed, asked: want use parameters (signal_free_region, range_water_signal_ppm) spectra? (y/n) y “Test_01” “Test_02” “Test_03” “Test_04” “Test_05” … “Test_16”. Choose number file used adjust parameters: (e.g. 1) 1 providing required input, metabodecon show plots ask questions regarding plots. , answers shown bold. Signal free region borders correct selected? (Area left right green lines) (y/n) y Water artefact fully inside red vertical lines? (y/n) y Now actual deconvolution start. deconvolution one single spectra usually takes approx. 1-10 minutes.","code":"spectrum_data <- generate_lorentz_curves(   data_path = datadir(\"example_datasets/bruker/blood\"),   file_format = \"bruker\" )"},{"path":"/articles/metabodecon.html","id":"look-up-global-max-and-minimum-ppm-values","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Look up global max and minimum ppm values","title":"metabodecon","text":"","code":"ppm_range <- get_ppm_range(   spectrum_data = spectrum_data )"},{"path":"/articles/metabodecon.html","id":"generate-matrix-of-features-based-on-spectrum-data","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Generate matrix of features based on spectrum data","title":"metabodecon","text":"","code":"feat <- gen_feat_mat(   data_path = data_path,   ppm_range = ppm_range,   si_size_real_spectrum = 131072, # 1)   scale_factor_x = 1000 # 2) )  # 1) Specify how many points were used to process the real spectrum? Often # called \"si\" inside NMR software (TopSpin). # 2) A factor which is used to avoid rounding errors due to numbers becoming # too small for R to handle e.g., 1000."},{"path":"/articles/metabodecon.html","id":"start-alignment-by-using-speaq-package","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Start alignment by using speaq package","title":"metabodecon","text":"","code":"after_speaq_mat <- speaq_align(   feat = feat,   maxShift = 50 # 1) )  # 1) Maximum number of points along the \"ppm-axis\" a value can be moved by the # speaq package. A value of 50 may be used as start value for plasma spectra. # However, depending on your spectra and the used digital resolution this value # may be be adapted."},{"path":"/articles/metabodecon.html","id":"further-optimize-alignment-by-calling-combine_peaks","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Further optimize alignment by calling combine_peaks","title":"metabodecon","text":"Even, alignment speaq data signals spread adjacent columns. Combination data purpose following routine. returned results step 5 contain two matrices aligned_res$long aligned_res$short short version columns containing zeros removed Furthermore, results written two .csv files data_path directory “aligned_res_short.csv” “aligned_res_long.csv”.","code":"aligned_res <- combine_peaks(   shifted_mat = after_speaq_mat,   range = 5, # 1) number of adjacent columns to be used for improving alignment   lower_bound = 1 2) # amount of columns that need to be skipped   spectrum_data = spectrum_data,   data_path = data_path )  # 1) Number of columns of which data may be combined in one column # 2) When results from speaq are used first column should be skipped"},{"path":[]},{"path":"/articles/metabodecon.html","id":"beirnaert-et-al-2018","dir":"Articles","previous_headings":"Introduction to metabodecon > References","what":"Beirnaert et al 2018","title":"metabodecon","text":"Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMR spectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://www.doi.org/ 10.1371/journal.pcbi.1006018","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wolfram Gronwald. Author, copyright holder. Martina Haeckl. Author. Tobias Schmidt. Author, maintainer. Yanren Linda Hu. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gronwald W, Haeckl M, Schmidt T (2024). metabodecon: Functions Deconvolution 1d NMR Spectra. R package version 1.1.0, https://spang-lab.github.io/metabodecon/.","code":"@Manual{,   title = {metabodecon: Functions for Deconvolution of 1d NMR Spectra},   author = {Wolfram Gronwald and Martina Haeckl and Tobias Schmidt},   year = {2024},   note = {R package version 1.1.0},   url = {https://spang-lab.github.io/metabodecon/}, }"},{"path":"/index.html","id":"metabodecon-","dir":"","previous_headings":"","what":"Functions for Deconvolution of 1d NMR Spectra","title":"Functions for Deconvolution of 1d NMR Spectra","text":"package deconvolution 1D NMR spectra using MetaboDecon1D followed alignment data using speaq package additional post-processing, resulting data matrix aligned signal integrals.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for Deconvolution of 1d NMR Spectra","text":"Copy paste following command running R session (e.g. RStudio):","code":"if (!\"devtools\" %in% installed.packages()[, \"Package\"]) {     install.packages(\"devtools\", repos = c(CRAN = \"https://cloud.r-project.org\")) } devtools::install_github(\"spang-lab/metabodecon\", build_manual = TRUE, build_vignettes = TRUE)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions for Deconvolution of 1d NMR Spectra","text":"Get Started can see example metabodecon can used deconvolute existing data set, followed alignment data additional postprocessing steps, resulting data matrix aligned signal integrals. Function Reference get overview function provided metabodecon.","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Functions for Deconvolution of 1d NMR Spectra","text":"Things can update, : Function code folder R Function documentation folder R Package documentation folder vignettes Test cases folder tests Dependencies file DESCRIPTION Authors file DESCRIPTION Whenever update things, run commands check everything still working expected steps, can push changes Github use following commands release package CRAN: steps based : https://r-pkgs.org/release.html","code":"devtools::test() # Execute tests from tests folder devtools::document() # Build files in man folder devtools::check() # Check package formalities devtools::install() # Install as required by next command pkgdown::build_site() # Build website in docs folder devtools::check(remote = TRUE, manual = TRUE)# Slower, but more realistic test than plain devtools::check() devtools::spell_check() # Check spelling. Add false positives to inst/WORDLIST revdepcheck::revdep_check(num_workers = 8) # Reverse dependency check # See https://r-pkgs.org/release.html#sec-release-revdep-checks for details devtools::submit_cran() # Submits the package to CRAN"},{"path":"/reference/MetaboDecon1D.html","id":null,"dir":"Reference","previous_headings":"","what":"The MetaboDecon1D Main Function — MetaboDecon1D","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"MetaboDecon1D enables automatic deconvolution 1D NMR spectrum several Lorentz curves integration . NMR file need Bruker format jcamp-dx format.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"","code":"MetaboDecon1D(   filepath,   filename = NA,   file_format = \"bruker\",   number_iterations = 10,   range_water_signal_ppm = 0.1527692,   signal_free_region = c(11.44494, -1.8828),   smoothing_param = c(2, 5),   delta = 6.4,   scale_factor = c(1000, 1e+06) )"},{"path":"/reference/MetaboDecon1D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"filepath Complete path file folder (Notice Bruker format: filepath need spectrum folder containing one different spectra (e.g.\"C:/Users/Username/Desktop/spectra_from_bruker\")) filename Name NMR file. (Notice Bruker format: filename need name spectrum also name folder) (Default: filename = NA analyze spectra ) file_format Format (bruker jcampdx) NMR file. (Default: file_format = \"bruker\") number_iterations Number iterations approximation parameters Lorentz curves (Default: number_iterations=10) range_water_signal_ppm Half width water artefact ppm (Default: range_water_signal=0.1527692 (e.g. urine NMR spectra)) signal_free_region Row vector two entries consisting ppm positions left right border signal free region spectrum. (Default: signal_free_region=c(11.44494, -1.8828)) smoothing_param Row vector two entries consisting number smoothing repeats whole spectrum number data points (uneven) mean calculation (Default: smoothing_param=c(2,5)) delta Defines threshold value distinguish signal noise (Default: delta=6.4) scale_factor Row vector two entries consisting factor scale x-axis factor scale y-axis (Default: scale_factor=c(1000,1000000))","code":""},{"path":"/reference/MetaboDecon1D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"List containing filename x_values (datapoints) x_values_ppm (ppm) y_values original spectrum spectrum_superposition y_values superposition generated Lorentz curves mse_normed mse value superposition Lorentz curves original spectrum standardized according get total area 1 peak_triplets_left (ppm x_values) peak_triplets_middle (ppm x_values) peak_triplets_right (ppm x_values) index_peak_triplets_left (index) index_peak_triplets_middle (index) index_peak_triplets_right (index) integrals generated Lorentz curve signal_free_region adjusted borders signal free region range_water_signal_ppm adjusted range water signal ppm values Lorentz curve lambda values Lorentz curve x_0 values Lorentz curve Notice: parameters , lambda x_0 calculate Lorentz curves saved parameters.txt approximated spectrum saved approximated_spectrum.txt file path.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"MetaboDecon1D package returns list .. parameters , lambda x_0 calculate Lorentz curves.Lorentz curves calculated using function calculate_lorentz_curves(). returns matrix containing generated approximated Lorentz curves real peak spectrum. row matrix depicts one Lorentz curve. Lorentz curves visualized saved using function plot_lorentz_curves_save_as_png(). superposition Lorentz curves, reconstructs original spectrum, also visualized saved plot_spectrum_superposition_save_as_png() function. analytical calculation Lorentz curves peak triplets peak used. visualize peak triplets illustrate impact threshold delta function plot_triplets() available. integral values generated Lorentz curves saved vector. Notice: feasible load spectra folder . filename need \"NA\" default value. One selected spectrum used adjust parameters (signal_free_region range_water_signal_ppm) analysis spectra. Furthermore possible adjust parameters spectrum separate.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"Haeckl, M.; Tauber, P.; Schweda, F.; Zacharias, H.U.; Altenbuchinger, M.; Oefner, P.J.; Gronwald, W. R-Package Deconvolution Integration 1D NMR Data: MetaboDecon1D. Metabolites 2021, 11, 452. https://www.doi.org/10.3390/metabo11070452","code":""},{"path":[]},{"path":"/reference/MetaboDecon1D.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"Martina Haeckl","code":""},{"path":"/reference/MetaboDecon1D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") result$mse_normed result$integrals  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") result$urine$mse_normed result$urine2$mse_normed  # Load one spectrum (jcamp-dx format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine.dx\", file_format=\"jcampdx\") result$mse_normed result$integrals  # Load all spectra (jcamp-dx format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"jcampdx\") result$urine.dx$mse_normed result$urine2.dx$mse_normed }"},{"path":"/reference/calculate_lorentz_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","title":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","text":"MetaboDecon1D package also comprise additional function calculate_lorentz_curves() calculate lorentz curves investigated spectrum.","code":""},{"path":"/reference/calculate_lorentz_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","text":"","code":"calculate_lorentz_curves(deconv_result, number_of_files = NA)"},{"path":"/reference/calculate_lorentz_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","text":"deconv_result Saved result MetaboDecon1D() function number_of_files Number spectra analyze","code":""},{"path":"/reference/calculate_lorentz_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","text":"One spectrum: matrix containing generated Lorentz curves. row depicts one Lorentz curve. spectra: list containing matrix generated Lorentz curve. matrix corresponds one spectrum row matrix depicts one Lorentz curve.","code":""},{"path":[]},{"path":"/reference/calculate_lorentz_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate lorentz curves for each analyzed spectrum — calculate_lorentz_curves","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(   filepath=\"load_example_path\",   filename=\"urine\",   file_format=\"bruker\" ) lorentz_curves <- calculate_lorentz_curves(result)  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Calculate Lorentz curves of all investigated spectra lorentz_curves <- calculate_lorentz_curves(result) # Save matrix containing all Lorentz curves of first spectrum lorentz_curves_first_spectrum <- lorentz_curves[[1]] # Calculate Lorentz curves of one certain investigated spectrum lorentz_curves_spectrum1 <- calculate_lorentz_curves(   result$urine ) }"},{"path":"/reference/combine_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"combine_peaks — combine_peaks","title":"combine_peaks — combine_peaks","text":"Even alignment spectra, alignment individual signals always perfect, segment-wise alignment performed .e. groups signals aligned. improvements, partly filled neighboring columns merged.","code":""},{"path":"/reference/combine_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine_peaks — combine_peaks","text":"","code":"combine_peaks(shifted_mat, range, lower_bound, spectrum_data, data_path)"},{"path":"/reference/combine_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine_peaks — combine_peaks","text":"shifted_mat (matrix) matrix obtained alignment speaq. range (positive integer) amount adjacent columns permitted used improving alignment e.g. 5 lower_bound (positive integer) amount columns need skipped (f.e. contain rownames instead values, modify case errors) default=1. spectrum_data (data frame) output generated function generate_lorentz_curves data_path (string) Path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution","code":""},{"path":"/reference/combine_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"combine_peaks — combine_peaks","text":"result two .csv files generated. One contain columns data point original spectrum one column (aligned_res_long.csv) one columns contain zeros (aligned_res_short.csv) omitted. files stored directory specified data_path.","code":""},{"path":"/reference/combine_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"combine_peaks — combine_peaks","text":"","code":"if (FALSE) { aligned_res <- combine_peaks(   after_speaq_mat,   range,   lower_bound,   spectrum_data,   data_path ) }"},{"path":"/reference/datadir.html","id":null,"dir":"Reference","previous_headings":"","what":"Return path to metabodecon's data directory — datadir","title":"Return path to metabodecon's data directory — datadir","text":"Returns path directory download_example_datasets() stores metabodecon's example data sets file within directory. default directory subdirectory R's temporary session directory. persistent set TRUE, directory equals data directory returned tools::R_user_dir() instead.","code":""},{"path":"/reference/datadir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return path to metabodecon's data directory — datadir","text":"","code":"datadir(file = NULL, warn = TRUE, persistent = NULL)"},{"path":"/reference/datadir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return path to metabodecon's data directory — datadir","text":"file Relative path file within data directory. warn Print warning message requested path yet exist? persistent Return path persistent data directory instead temporary one?","code":""},{"path":"/reference/datadir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return path to metabodecon's data directory — datadir","text":"decision use temporary data dir default persistent one optionally made conform CRAN package policies, state : Packages write user's home filespace (including clipboards), anywhere else file system apart R session's temporary directory (installation location pointed TMPDIR: usage cleaned ). Installing system's R installation (e.g., scripts bin directory) allowed. Limited exceptions may allowed interactive sessions package obtains confirmation user. R version 4.0 later (hence version dependency required conditional use possible), packages may store user-specific data, configuration cache files respective user directories obtained tools::R_user_dir(), provided default sizes kept small possible contents actively managed (including removing outdated material). Source: cran.r-project.org/web/packages/policies","code":""},{"path":[]},{"path":"/reference/datadir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return path to metabodecon's data directory — datadir","text":"","code":"# Return path to persistent data dir if it exists, else path to temp data dir datadir() #> Warning: /tmp/Rtmp1egqBb/metabodecon/data does not exist. Please call `download_example_datasets()` first. #> [1] \"/tmp/Rtmp1egqBb/metabodecon/data\"  # Return path to temporary data directory datadir(persistent = FALSE) #> Warning: /tmp/Rtmp1egqBb/metabodecon/data does not exist. Please call `download_example_datasets()` first. #> [1] \"/tmp/Rtmp1egqBb/metabodecon/data\"  # Return path to persistent data directory datadir(persistent = TRUE) #> Warning: /home/runner/.local/share/R/metabodecon does not exist. Please call `download_example_datasets()` first. #> [1] \"/home/runner/.local/share/R/metabodecon\"  # Return path to \"<persistent-data-dir>/bruker/urine\" if it exists. # Else return path to \"<temp-data-dir>/bruker/urine\" datadir(file = \"bruker/urine\") #> Warning: /tmp/Rtmp1egqBb/metabodecon/data/bruker/urine does not exist. Please call `download_example_datasets()` first. #> [1] \"/tmp/Rtmp1egqBb/metabodecon/data/bruker/urine\""},{"path":"/reference/datadir_persistent.html","id":null,"dir":"Reference","previous_headings":"","what":"Persistent Data Directory — datadir_persistent","title":"Persistent Data Directory — datadir_persistent","text":"Returns path persistent data directory metabodecon's data sets stored. directory equals data directory returned tools::R_user_dir() plus additional path normalization.","code":""},{"path":"/reference/datadir_persistent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Persistent Data Directory — datadir_persistent","text":"","code":"datadir_persistent()"},{"path":"/reference/datadir_persistent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Persistent Data Directory — datadir_persistent","text":"Returns path persistent data directory.","code":""},{"path":[]},{"path":"/reference/datadir_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporary Data Directory — datadir_temp","title":"Temporary Data Directory — datadir_temp","text":"Returns path temporary data directory metabodecon's data sets stored. directory equals subdirectory \"data\" metabodecons temporary session directory [tempdir()] plus additional path normalization.","code":""},{"path":"/reference/datadir_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary Data Directory — datadir_temp","text":"","code":"datadir_temp()"},{"path":"/reference/datadir_temp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporary Data Directory — datadir_temp","text":"Returns path temporary data directory.","code":""},{"path":[]},{"path":"/reference/deconvolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute one single spectrum — deconvolution","title":"Deconvolute one single spectrum — deconvolution","text":"Deconvolute one single spectrum","code":""},{"path":"/reference/deconvolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute one single spectrum — deconvolution","text":"","code":"deconvolution(   filepath,   name,   file_format,   same_parameter,   processing_value,   number_iterations,   range_water_signal_ppm,   signal_free_region,   smoothing_param,   delta,   scale_factor,   current_filenumber )"},{"path":"/reference/deconvolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute one single spectrum — deconvolution","text":"filepath TODO name TODO file_format TODO same_parameter TODO processing_value TODO number_iterations TODO range_water_signal_ppm TODO signal_free_region TODO smoothing_param TODO delta TODO scale_factor TODO current_filenumber TODO","code":""},{"path":"/reference/deconvolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolute one single spectrum — deconvolution","text":"TODO","code":""},{"path":"/reference/dohCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"dohCluster — dohCluster","title":"dohCluster — dohCluster","text":"function speaq package. function dohCluster automatically called function speaq_align. speaq package used perform signal alignment across individual spectra. speaq please cite: (Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMRspectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://www.doi.org/10.1371/journal.pcbi.1006018. spectra deconvolution process yields signals spectra. Due slight changes measurement conditions, e.g. pH variations, signal positions may vary slightly across spectra. consequence, prior analysis signals belonging compound aligned across spectra. purpose speaq package.","code":""},{"path":"/reference/dohCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dohCluster — dohCluster","text":"","code":"dohCluster(   X,   peakList,   refInd = 0,   maxShift = 100,   acceptLostPeak = TRUE,   verbose = TRUE )"},{"path":"/reference/dohCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dohCluster — dohCluster","text":"X data_matrix returned gen_feat_mat() peakList peakList returned function gen_feat_mat() refInd (positive integer) number reference spectrum .e. spectrum signals aligned . number automatically determined function speaq_align calls dohCluster maxShift (positive integer) maximum number points along \"ppm-axis\" value can moved speaq package e.g. 50 acceptLostPeak (logic) default TRUE verbose (logic) default TRUE","code":""},{"path":"/reference/dohCluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dohCluster — dohCluster","text":"function dohCluster speaq package rewritten compatible data generated MetaboDecon1D function gen_feat_mat return new peakList aligned spectra. Overwrite original dohCluster function speaq package. Function able return new peakList aligned spectra.","code":""},{"path":"/reference/download_example_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Download metabodecon Example Datasets — download_example_datasets","title":"Download metabodecon Example Datasets — download_example_datasets","text":"function downloads example datasets can used test functionality metabodecon package. datasets included package default due size constraints. datasets downloaded zip file.","code":""},{"path":"/reference/download_example_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download metabodecon Example Datasets — download_example_datasets","text":"","code":"download_example_datasets(   dst_dir = NULL,   extract = TRUE,   persistent = NULL,   overwrite = FALSE )"},{"path":"/reference/download_example_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download metabodecon Example Datasets — download_example_datasets","text":"dst_dir destination directory downloaded datasets stored. NULL, function return path cached zip file. extract Logical. TRUE, downloaded zip file extracted. persistent Logical. TRUE, downloaded datasets cached datadir_persistent() speed future calls download_example_datasets(). FALSE, datasets cached datadir_temp(). NULL, function check paths cached datasets use datadir_temp() cached file yet exist. overwrite Logical. TRUE, existing files name destination directory overwritten.","code":""},{"path":"/reference/download_example_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download metabodecon Example Datasets — download_example_datasets","text":"path downloaded (possibly extracted) datasets.","code":""},{"path":[]},{"path":"/reference/download_example_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download metabodecon Example Datasets — download_example_datasets","text":"","code":"if (FALSE) { download_example_datasets(dst_dir = \".\", extract = TRUE, persistent = TRUE, overwrite = TRUE) }"},{"path":"/reference/gen_feat_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_feat_mat — gen_feat_mat","title":"gen_feat_mat — gen_feat_mat","text":"function generate feature matrix","code":""},{"path":"/reference/gen_feat_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_feat_mat — gen_feat_mat","text":"","code":"gen_feat_mat(data_path, ppm_range, si_size_real_spectrum, scale_factor_x)"},{"path":"/reference/gen_feat_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gen_feat_mat — gen_feat_mat","text":"data_path (string): path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution ppm_range (numeric) result function get_ppm_range .e ppm range signals distributed si_size_real_spectrum (positive integer) number real data points original spectra, e.g. 128k = 131072 data points scale_factor_x (positive integer): factor used avoid rounding errors e.g. 1000","code":""},{"path":"/reference/gen_feat_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gen_feat_mat — gen_feat_mat","text":"output function data frame containing matrix integral values found spectra (data_matrix). , row corresponds one spectrum column one data point spectra, example 128k data points spectrum correspond 128K columns data matrix. Furthermore, list signals(peakList), individual parameters signals stored data structure.","code":""},{"path":"/reference/gen_feat_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gen_feat_mat — gen_feat_mat","text":"","code":"if (FALSE) { feat <- gen_feat_mat(   data_path = data_path,   ppm_range = ppm_range,   si_size_real_spectrum=si_size_real_spectrum,   scale_factor_x=scale_factor ) }"},{"path":"/reference/generate_lorentz_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_lorentz_curves — generate_lorentz_curves","title":"generate_lorentz_curves — generate_lorentz_curves","text":"function starts actual deconvolution spectra generates detected signal Lorentz curve","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_lorentz_curves — generate_lorentz_curves","text":"","code":"generate_lorentz_curves(data_path, file_format = \"bruker\", make_rds = FALSE)"},{"path":"/reference/generate_lorentz_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_lorentz_curves — generate_lorentz_curves","text":"data_path (string) path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution file_format (string) default bruker, supported format jcamp-dx make_rds (logic) like store results rds file, default set FALSE, set true save results many spectra evaluated therefore computing time increases","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"generate_lorentz_curves — generate_lorentz_curves","text":"First, automated curvature based signal selection performed. signal represented 3 data points allow determination initial Lorentz curves. Lorentz curves iteratively adjusted optimally approximate measured spectrum. spectrum two text files created parent folder .e. folder given data path. spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution. Furthermore, numerical values deconvolution also stored data_frame.","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate_lorentz_curves — generate_lorentz_curves","text":"","code":"if (FALSE) { data_path=c(\"C:/example_data\") spectrum_data <- generate_lorentz_curves(   data_path = data_path,   file_format = \"bruker\",   make_rds = FALSE) }"},{"path":"/reference/get_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve directory path of an example dataset — get_data_dir","title":"Retrieve directory path of an example dataset — get_data_dir","text":"Returns path directory storing example files shipped metabodecon. Deprecated. Please use datadir() instead. See examples usage. ``","code":""},{"path":"/reference/get_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve directory path of an example dataset — get_data_dir","text":"","code":"get_data_dir(dataset_name = c(\"\", \"blood\", \"test\", \"urine\"), warn = TRUE)"},{"path":"/reference/get_data_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve directory path of an example dataset — get_data_dir","text":"dataset_name Either \"\", \"test\", \"blood\" \"urine\". warn Whether print warning message example folders yet exist, .e. download_example_datasets() called yet.","code":""},{"path":[]},{"path":"/reference/get_data_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve directory path of an example dataset — get_data_dir","text":"","code":"x <- get_data_dir(\"urine\")                     # Deprecated #> Warning: /tmp/Rtmp1egqBb/metabodecon/data does not exist. Please call `download_example_datasets()` first. #> Warning: /tmp/Rtmp1egqBb/metabodecon/data/example_datasets/bruker/urine does not exist. Please call `download_example_datasets(extract = TRUE)` first. y <- datadir(\"example_datasets/bruker/urine\")  # Preferred #> Warning: /tmp/Rtmp1egqBb/metabodecon/data/example_datasets/bruker/urine does not exist. Please call `download_example_datasets()` first."},{"path":"/reference/get_ppm_range.html","id":null,"dir":"Reference","previous_headings":"","what":"get_ppm_range — get_ppm_range","title":"get_ppm_range — get_ppm_range","text":"function get ppm range spectra, required spectra alignment following deconvolution","code":""},{"path":"/reference/get_ppm_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_ppm_range — get_ppm_range","text":"","code":"get_ppm_range(spectrum_data)"},{"path":"/reference/get_ppm_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_ppm_range — get_ppm_range","text":"spectrum_data Data frame generated function generate_lorentz_curves, contains results deconvolution spectra","code":""},{"path":"/reference/get_ppm_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_ppm_range — get_ppm_range","text":"determines deconvolution signal highest signal lowest ppm value.","code":""},{"path":"/reference/get_ppm_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_ppm_range — get_ppm_range","text":"","code":"if (FALSE) { ppm_range <- get_ppm_range(spectrum_data = spectrum_data) }"},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"MetaboDecon1D package also comprise additional function plot_lorentz_curves_save_as_png() plot original spectrum generated Lorentz curves save result png filepath.","code":""},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"","code":"plot_lorentz_curves_save_as_png(deconv_result, x_range = c(), y_range = c())"},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") plot_lorentz_curves_save_as_png(result)  # Load more spectra (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot Lorentz curves of all investigated spectra plot_lorentz_curves_save_as_png(result) # Plot Lorentz curves of one certain investigated spectrum plot_lorentz_curves_save_as_png(result$urine) }"},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"MetaboDecon1D package also comprise additional function plot_spectrum_superposition_save_as_png() plot original spectrum superposition generated Lorentz curves save result png filepath.","code":""},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"","code":"plot_spectrum_superposition_save_as_png(   deconv_result,   x_range = c(),   y_range = c() )"},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(   filepath=\"load_example_path\",   filename=\"urine\",   file_format=\"bruker\" ) plot_spectrum_superposition_save_as_png(result)  # Load more spectra (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot superposition of Lorentz curves of all spectra plot_spectrum_superposition_save_as_png(result) # Plot superposition of Lorentz curves of one certain investigated spectrum plot_spectrum_superposition_save_as_png(result$urine) }"},{"path":"/reference/plot_triplets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot peak triplets for variable range — plot_triplets","title":"Function to plot peak triplets for variable range — plot_triplets","text":"MetaboDecon1D package also comprise additional function plot_triplets() plot peak triplets peak.","code":""},{"path":"/reference/plot_triplets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot peak triplets for variable range — plot_triplets","text":"","code":"plot_triplets(deconv_result, x_range = c(), y_range = c())"},{"path":"/reference/plot_triplets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot peak triplets for variable range — plot_triplets","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_triplets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot peak triplets for variable range — plot_triplets","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") plot_triplets(result) # Plot part of spectrum plot_triplets(result, c(1.4,1.3), c(0,20))  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot triplets of all investigated spectra plot_triplets(result) # Plot triplets of one certain investigated spectrum plot_triplets(result$urine) }"},{"path":"/reference/show_license.html","id":null,"dir":"Reference","previous_headings":"","what":"Show terms and conditions of license — show_license","title":"Show terms and conditions of license — show_license","text":"Show terms conditions license","code":""},{"path":"/reference/show_license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show terms and conditions of license — show_license","text":"","code":"show_license(...)"},{"path":"/reference/show_license.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show terms and conditions of license — show_license","text":"... used","code":""},{"path":"/reference/speaq_align.html","id":null,"dir":"Reference","previous_headings":"","what":"speaq_align — speaq_align","title":"speaq_align — speaq_align","text":"Alignment speaq. speaq package used perform signal alignment across individual spectra. speaq please cite: (Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMRspectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://www.doi.org/10.1371/journal.pcbi.1006018. spectra deconvolution process yields signals spectra. Due slight changes measurement conditions, e.g. pH variations, signal positions may vary slightly across spectra. consequence, prior analysis signals belonging compound aligned across spectra. purpose speaq package.","code":""},{"path":"/reference/speaq_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"speaq_align — speaq_align","text":"","code":"speaq_align(feat, maxShift, spectrum_data, si_size_real_spectrum)"},{"path":"/reference/speaq_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"speaq_align — speaq_align","text":"feat (data frame) Contains data deconvoluted signals analyzed spectra alignment. maxShift (positive integer) maximum number points along \"ppm-axis\" value can moved speaq package e.g. 50. 50 suitable starting value plasma spectra digital resolution 128K. Note parameter individually optimized depending type analyzed spectra digital resolution. urine prone chemical shift variations value probably increased. spectrum_data (data frame) output generated function generate_lorentz_curves. si_size_real_spectrum (positive integer) number real data points original spectra, e.g. 128k = 131072 data points","code":""},{"path":"/reference/speaq_align.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"speaq_align — speaq_align","text":"output speaq_align data matrix aligned integral values. row contains data spectrum column corresponds one data point. entry corresponds integral deconvoluted signal signal center specific position alignment speaq.","code":""},{"path":"/reference/speaq_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"speaq_align — speaq_align","text":"","code":"if (FALSE) { after_speaq_mat<-speaq_align(feat, maxShift) }"},{"path":"/reference/tempdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporary Session Directory — tempdir","title":"Temporary Session Directory — tempdir","text":"Returns path metabodecon's temporary session directory. directory equals subdirectory \"metabodecon\" R's temporary session directory [tempdir()] plus additional path normalization.","code":""},{"path":"/reference/tempdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary Session Directory — tempdir","text":"","code":"tempdir()"},{"path":"/reference/tempdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporary Session Directory — tempdir","text":"Returns path temporary session directory.","code":""},{"path":"/news/index.html","id":"metabodecon-110","dir":"Changelog","previous_headings":"","what":"metabodecon 1.1.0","title":"metabodecon 1.1.0","text":"Currently development branch improve_tests. Improved function download_example_datasets() Replaced function get_data_dir() datadir() helper functions datadir_persistent(), datadir_temp() tempdir Added question file structure vignettes/FAQ.Rmd Created categories function reference _pkgdown.yml Moved misc/datasets misc/example_datasets Moved misc/examples/usage_example.R misc/code_examples/sage_example.R Function get_data_dir() now deprecated favour datadir() relevant developers: Added unit tests Removed script check_package.R Moved functions util.R datadir.R Added grDevices, stats utils internal imports Added lots test helper functions R/test_helpers.R Added issue 6. Fix: generate_lorentz_curves write input folders default TODOS.md Added function generate_lorentz_curves_v2() replace generate_lorentz_curves() soon new features 100% backwards compatibility Bumped version 1.1.0 DESCRIPTION Updated NEWS.md Fixed bug () caused get_datadir_mock() called redirection took place causing unexpected message output Fixed bug datadir() caused resulting path end slash Unix-like systems without slash Windows, file specified RUN_SLOW_TESTS now set TRUE CI pipeline","code":""},{"path":"/news/index.html","id":"metabodecon-103","dir":"Changelog","previous_headings":"","what":"metabodecon 1.0.3","title":"metabodecon 1.0.3","text":"Improved documentation Switched MIT License GPL-3 match license predecessor package MetaboDecon1D Updated get_data_dir() accept \"blood\" new value parameter dataset_name Updated download_example_datasets() download datasets github repo instead old spang-lab repo relevant developers: Removed table contents README.md ’s bit overkill approx. 50 lines text Added docs folder .gitignore. Reason: changed vignettes pkgdown articles displayed Github Pages website can regenerated folder vignettes upon deployment. Added lots todos TODOS.md Added TODOS.md .Rbuildignore Improved .gitignore","code":""},{"path":"/news/index.html","id":"metabodecon-102","dir":"Changelog","previous_headings":"","what":"metabodecon 1.0.2","title":"metabodecon 1.0.2","text":"Minor URL spelling adjustments pass CRAN checks","code":""},{"path":"/news/index.html","id":"metabodecon-101","dir":"Changelog","previous_headings":"","what":"metabodecon 1.0.1","title":"metabodecon 1.0.1","text":"Fixed spelling errors. Removed unused CONTRIBUTE.md (instead section within README.md used)","code":""},{"path":"/news/index.html","id":"metabodecon-100","dir":"Changelog","previous_headings":"","what":"metabodecon 1.0.0","title":"metabodecon 1.0.0","text":"Initial CRAN submission.","code":""}]
