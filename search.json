[{"path":"/CONTRIBUTE.html","id":"create-new-version","dir":"","previous_headings":"","what":"Create new version","title":"NA","text":"Clone repo Create new branch Make desired changes Open R terminal inside repository root folder Use command devtools::load_all() load new package source Try changed functions Increase version DESCRIPTION Use devtools::document() update documentation files based roxygen comments describing function Use devtools::check() run tests required CRAN Push changes gitlab Create merge request gitlab automatic checks passed, accept merge request","code":""},{"path":"/CONTRIBUTE.html","id":"submit-to-cran","dir":"","previous_headings":"","what":"Submit to CRAN","title":"NA","text":"According https://r-pkgs.org/release.html following steps necessary","code":"devtools::document() # Update documentation rcmdcheck::rcmdcheck(     # Run `R CMD check` for this package     args=c(\"--no-manual\", \"--as-cran\"),     build_args=c(\"--no-manual\"),     check_dir=\"check\" ) if (FALSE) {     # package is currently broken     revdepcheck::revdep_check(num_workers = detectCores(logical=FALSE)) #1     #1 Run `R CMD check` for all dependencies     #1 For first time setup use `usethis::use_revdep()` } else {     # use function from core team instead     if (!dir.exists(\"dist\")) {         dir.create(\"dist\")     }     devtools::build(path=\"dist/\")     tools::check_packages_in_dir(         dir = \"dist/\",         check_args = \"--as-cran\",         reverse = list(             repos = getOption(\"repos\")[\"CRAN\"],             which = \"all\",             recursive = TRUE         ),         clean = FALSE     )     tools::summarize_check_packages_in_dir_results(\"dist/\")     tools::summarize_check_packages_in_dir_timings(\"dist/\")     tools::check_packages_in_dir_details(\"dist/\") } # Update cran-comments.md devtools::spell_check() # Check spelling of package devtools::release() # Builds, tests and submits the package to CRAN. # Manual submission can be done at: https://cran.r-project.org/submit.html"},{"path":"/articles/metabodecon.html","id":"introduction-to-metabodecon","dir":"Articles","previous_headings":"","what":"Introduction to metabodecon","title":"metabodecon","text":"goal metabodecon make deconvolution alignment 1D NMR spectra easy possible. deconvolution part uses codebase MetaboDecon1D (https://doi.org/10.3390/metabo11070452). alignment deconvoluted spectra done using functions speaq package (https://cran.r-project.org/web/packages/speaq/index.html) adapted metabodecon. using speaq package please cite (Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMR spectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://doi.org/ 10.1371/journal.pcbi.1006018).","code":""},{"path":"/articles/metabodecon.html","id":"download-the-example-data","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Download the example data","title":"metabodecon","text":"metabodecon repository contains two example datasets: test urine. “test” dataset contains 16 1D CPMG NMR spectra blood plasma Bruker format. dataset used test functions including data alignment. “urine” dataset contains 2 1D NOESY NMR spectra urine. spectra available Bruker jcamp-dx format. dataset used test deconvolution single NMR spectra without alignment. Due size constraints R packages, datasets included default package installed, must downloaded explicitly afterwards.","code":"metabodecon::download_example_datasets() data_path <- metabodecon::get_data_dir(\"test\")"},{"path":"/articles/metabodecon.html","id":"use-metabodecon1d-to-convert-a-spectrum-into-lorentz-curves","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Use MetaboDecon1D to convert a spectrum into Lorentz curves","title":"metabodecon","text":"calling function, R request interactive input user. Note data_path .e. folder samples spectra stored given data_path argument. samples folder automatically analyzed. Therefore, specify individual sample names. specify spectrum processing sample used. answers give provided examples written bold: name subfolder filepath? different spectra sample specified numbers, specify spectrum used (e.g. 10 C:/Users/Username/Desktop/spectra_folder/spectrum_name/10) 10 name subsubsubfolder filepath? spectrum can processed different settings, computations stored different number (e.g. 10 C:/Users/Username/Desktop/spectra_folder/spectrum_name/10/pdata/10): 10 case one spectrum analyzed, asked: want use parameters (signal_free_region, range_water_signal_ppm) spectra? (y/n) y “Test_01” “Test_02” “Test_03” “Test_04” “Test_05” … “Test_16”. Choose number file used adjust parameters: (e.g. 1) 1 providing required input, metabodecon show plots ask questions regarding plots. , answers shown bold. Signal free region borders correct selected? (Area left right green lines) (y/n) y Water artefact fully inside red vertical lines? (y/n) y Now actual deconvolution start. deconvolution one single spectra usually takes approx. 1-10 minutes.","code":"spectrum_data <- metabodecon::generate_lorentz_curves(   data_path = data_path,   file_format = \"bruker\",   make_rds = FALSE )"},{"path":"/articles/metabodecon.html","id":"look-up-global-max-and-minimum-ppm-values","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Look up global max and minimum ppm values","title":"metabodecon","text":"","code":"ppm_range <- get_ppm_range(   spectrum_data = spectrum_data )"},{"path":"/articles/metabodecon.html","id":"generate-matrix-of-features-based-on-spectrum-data","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Generate matrix of features based on spectrum data","title":"metabodecon","text":"","code":"feat <- gen_feat_mat(   data_path = data_path,   ppm_range = ppm_range,   si_size_real_spectrum = 131072, # 1)   scale_factor_x = 1000 # 2) )  # 1) Specify how many points were used to process the real spectrum? Often # called \"si\" inside NMR software (TopSpin). # 2) A factor which is used to avoid rounding errors due to numbers becoming # too small for R to handle e.g., 1000."},{"path":"/articles/metabodecon.html","id":"start-alignment-by-using-speaq-package","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Start alignment by using speaq package","title":"metabodecon","text":"","code":"after_speaq_mat <- speaq_align(   feat = feat,   maxShift = 50 # 1) )  # 1) Maximum number of points along the \"ppm-axis\" a value can be moved by the # speaq package. A value of 50 may be used as start value for plasma spectra. # However, depending on your spectra and the used digital resolution this value # may be be adapted."},{"path":"/articles/metabodecon.html","id":"further-optimize-alignment-by-calling-combine_peaks","dir":"Articles","previous_headings":"Introduction to metabodecon","what":"Further optimize alignment by calling combine_peaks","title":"metabodecon","text":"Even, alignment speaq data signals spread adjacent columns. Combination data purpose following routine. returned results step 5 contain two matrices aligned_res$long aligned_res$short short version columns containing zeros removed Furthermore, results written two .csv files data_path directory “aligned_res_short.csv” “aligned_res_long.csv”.","code":"aligned_res <- combine_peaks(   shifted_mat = after_speaq_mat,   range = 5, # 1) number of adjacent columns to be used for improving alignment   lower_bound = 1 2) # amount of columns that need to be skipped   spectrum_data = spectrum_data,   data_path = data_path )  # 1) Number of columns of which data may be combined in one column # 2) When results from speaq are used first column should be skipped"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wolfram Gronwald. Author, maintainer. Martina Haeckl. Author. Tobias Schmidt. Author. Yanren Linda Hu. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gronwald W, Haeckl M, Schmidt T (2023). metabodecon: Functions deconvolution 1D NMR spectra. R package version 1.0.0, https://spang-lab.github.io/metabodecon/.","code":"@Manual{,   title = {metabodecon: Functions for deconvolution of 1D NMR spectra},   author = {Wolfram Gronwald and Martina Haeckl and Tobias Schmidt},   year = {2023},   note = {R package version 1.0.0},   url = {https://spang-lab.github.io/metabodecon/}, }"},{"path":"/index.html","id":"metabodecon-","dir":"","previous_headings":"","what":"Functions for deconvolution of 1D NMR spectra","title":"Functions for deconvolution of 1D NMR spectra","text":"package deconvolution 1D NMR spectra using MetaboDecon1D followed alignment data speaq package additional postprocessing resulting aligned data matrix aligned signal integrals. Installation Usage Contribute Open Issues","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for deconvolution of 1D NMR spectra","text":"Copy paste following command running R session (e.g. RStudio):","code":"if (!\"devtools\" %in% installed.packages()[, \"Package\"]) {     install.packages(         pkgs = \"devtools\",         repos = c(CRAN = \"https://cloud.r-project.org\")     ) } devtools::install_gitlab(     repo = \"grw28475/metabodecon\",     host = \"https://gitlab.spang-lab.de/\",     auth_token = \"glpat-ndxyfy5Ty7yksgy9MAFs\",     build_manual = TRUE,     build_vignettes = TRUE )"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions for deconvolution of 1D NMR spectra","text":"file vignettes/metabodecon.Rmd shows example metabodecon can used deconvolute existing data set, followed alignment data additional postprocessing steps, resulting data matrix aligned signal integrals. get nice rendering document, highly recommended download repository open docs/index.html browser choice. get view like : man/figures/pkgdown_preview.png","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Functions for deconvolution of 1D NMR spectra","text":"See file CONTRIBUTE.md instructions contribute project.","code":""},{"path":"/index.html","id":"open-issues","dir":"","previous_headings":"","what":"Open Issues","title":"Functions for deconvolution of 1D NMR spectra","text":"function generate_lorentz_curves possible specify parameters via function arguments (makes batch execution /repeated execution lot easier). Input prompting function generate_lorentz_curves broken Windows 11 system R4.2.3. checked. Timestamps generate_lorentz_curves nice, can see long take function finish.","code":""},{"path":"/reference/MetaboDecon1D.html","id":null,"dir":"Reference","previous_headings":"","what":"The MetaboDecon1D Main Function — MetaboDecon1D","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"MetaboDecon1D enables automatic deconvolution 1D NMR spectrum several Lorentz curves integration . NMR file need Bruker format jcamp-dx format.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"","code":"MetaboDecon1D(   filepath,   filename = NA,   file_format = \"bruker\",   number_iterations = 10,   range_water_signal_ppm = 0.1527692,   signal_free_region = c(11.44494, -1.8828),   smoothing_param = c(2, 5),   delta = 6.4,   scale_factor = c(1000, 1e+06) )"},{"path":"/reference/MetaboDecon1D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"filepath Complete path file folder (Notice Bruker format: filepath need spectrum folder containing one different spectra (e.g.\"C:/Users/Username/Desktop/spectra_from_bruker\")) filename Name NMR file. (Notice Bruker format: filename need name spectrum also name folder) (Default: filename = NA analyse spectra ) file_format Format (bruker jcampdx) NMR file. (Default: file_format = \"bruker\") number_iterations Number iterations approximation parameters Lorentz curves (Default: number_iterations=10) range_water_signal_ppm Half width water artefact ppm (Default: range_water_signal=0.1527692 (e.g. urine NMR spectra)) signal_free_region Row vector two entries consisting ppm positions left right border signal free region spectrum. (Default: signal_free_region=c(11.44494, -1.8828)) smoothing_param Row vector two entries consisting number smoothing repeats whole spectrum number data points (uneven) mean calculation (Default: smoothing_param=c(2,5)) delta Defines threshold value distinguish signal noise (Default: delta=6.4) scale_factor Row vector two entries consisting factor scale x-axis factor scale y-axis (Default: scale_factor=c(1000,1000000))","code":""},{"path":"/reference/MetaboDecon1D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"List containing filename x_values (datapoints) x_values_ppm (ppm) y_values original spectrum spectrum_superposition y_values superposition generated Lorentz curves mse_normed mse value superposition Lorentz curves original spectrum standardized according get total area 1 peak_triplets_left (ppm x_values) peak_triplets_middle (ppm x_values) peak_triplets_right (ppm x_values) index_peak_triplets_left (index) index_peak_triplets_middle (index) index_peak_triplets_right (index) integrals generated Lorentz curve signal_free_region adjusted borders signal free region range_water_signal_ppm adjusted range water signal ppm values Lorentz curve lambda values Lorentz curve x_0 values Lorentz curve Notice: parameters , lambda x_0 calculate Lorentz curves saved parameters.txt approximated spectrum saved approximated_spectrum.txt file path.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"MetaboDecon1D package returns list .. parameters , lambda x_0 calculate Lorentz curves.Lorentz curves calculated using function calculate_lorentz_curves(). returns matrix containing generated approximated Lorentz curves real peak spectrum. row matrix depicts one Lorentz curve. Lorentz curves visualised saved using function plot_lorentz_curves_save_as_png(). superposition Lorentz curves, reconstructs original spectrum, also visualised saved plot_spectrum_superposition_save_as_png() function. analytical calculation Lorentz curves peak triplets peak used. visualise peak triplets illustrate impact threshold delta function plot_triplets() available. integral values generated Lorentz curves saved vector. Notice: feasible load spectra folder . filename need \"NA\" default value. One selected spectrum used adjust parameters (signal_free_region range_water_signal_ppm) analysis spectra. Furthermore possible adjust parameters spectrum separate.","code":""},{"path":"/reference/MetaboDecon1D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"Haeckl, M.; Tauber, P.; Schweda, F.; Zacharias, H.U.; Altenbuchinger, M.; Oefner, P.J.; Gronwald, W. R-Package Deconvolution Integration 1D NMR Data: MetaboDecon1D. Metabolites 2021, 11, 452. https://doi.org/10.3390/metabo11070452","code":""},{"path":[]},{"path":"/reference/MetaboDecon1D.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"Martina Haeckl","code":""},{"path":"/reference/MetaboDecon1D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The MetaboDecon1D Main Function — MetaboDecon1D","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") result$mse_normed result$integrals  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") result$urine$mse_normed result$urine2$mse_normed  # Load one spectrum (jcamp-dx format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine.dx\", file_format=\"jcampdx\") result$mse_normed result$integrals  # Load all spectra (jcamp-dx format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"jcampdx\") result$urine.dx$mse_normed result$urine2.dx$mse_normed }"},{"path":"/reference/calculate_lorentz_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","title":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","text":"MetaboDecon1D package also comprise additional function calculate_lorentz_curves() calculate lorentz curves investigated spectrum.","code":""},{"path":"/reference/calculate_lorentz_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","text":"","code":"calculate_lorentz_curves(deconv_result, number_of_files = NA)"},{"path":"/reference/calculate_lorentz_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","text":"deconv_result Saved result MetaboDecon1D() function number_of_files Number spectra analyze","code":""},{"path":"/reference/calculate_lorentz_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","text":"One spectrum: matrix containing generated Lorentz curves. row depicts one Lorentz curve. spectra: list containing matrix generated Lorentz curve. matrix corresponds one spectrum row matrix depicts one Lorentz curve.","code":""},{"path":[]},{"path":"/reference/calculate_lorentz_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate lorentz curves for each analysed spectrum — calculate_lorentz_curves","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(   filepath=\"load_example_path\",   filename=\"urine\",   file_format=\"bruker\" ) lorentz_curves <- calculate_lorentz_curves(result)  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Calculate Lorentz curves of all investigated spectra lorentz_curves <- calculate_lorentz_curves(result) # Save matrix containing all Lorentz curves of first spectrum lorentz_curves_first_spectrum <- lorentz_curves[[1]] # Calculate Lorentz curves of one certain investigated spectrum lorentz_curves_spectrum1 <- calculate_lorentz_curves(   result$urine ) }"},{"path":"/reference/combine_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"combine_peaks — combine_peaks","title":"combine_peaks — combine_peaks","text":"Even alignment spectra, alignment individual signals always perfect, segment-wise alignment performed .e. groups signals aligned. improvements, partly filled neighboring columns merged.","code":""},{"path":"/reference/combine_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine_peaks — combine_peaks","text":"","code":"combine_peaks(shifted_mat, range, lower_bound, spectrum_data, data_path)"},{"path":"/reference/combine_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine_peaks — combine_peaks","text":"shifted_mat (matrix) matrix obtained alignment speaq. range (positive integer) amount adjecant columns permitted used improving alignment e.g. 5 lower_bound (positive integer) amount columns need skipped (f.e. contain rownames instead values, modify case errors) default=1. spectrum_data (data frame) output generated function generate_lorentz_curves data_path (string) Path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution","code":""},{"path":"/reference/combine_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"combine_peaks — combine_peaks","text":"result two .csv files generated. One contain columns data point original spectrum one column (aligned_res_long.csv) one columns contain zeros (aligned_res_short.csv) omitted. files stored directory specified data_path.","code":""},{"path":"/reference/combine_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"combine_peaks — combine_peaks","text":"","code":"if (FALSE) { aligned_res <- combine_peaks(   after_speaq_mat,   range,   lower_bound,   spectrum_data,   data_path ) }"},{"path":"/reference/deconvolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute one single spectrum — deconvolution","title":"Deconvolute one single spectrum — deconvolution","text":"Deconvolute one single spectrum","code":""},{"path":"/reference/deconvolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute one single spectrum — deconvolution","text":"","code":"deconvolution(   filepath,   name,   file_format,   same_parameter,   processing_value,   number_iterations,   range_water_signal_ppm,   signal_free_region,   smoothing_param,   delta,   scale_factor,   current_filenumber )"},{"path":"/reference/deconvolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute one single spectrum — deconvolution","text":"filepath TODO name TODO file_format TODO same_parameter TODO processing_value TODO number_iterations TODO range_water_signal_ppm TODO signal_free_region TODO smoothing_param TODO delta TODO scale_factor TODO current_filenumber TODO","code":""},{"path":"/reference/deconvolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolute one single spectrum — deconvolution","text":"TODO","code":""},{"path":"/reference/dohCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"dohCluster — dohCluster","title":"dohCluster — dohCluster","text":"function speaq package. function dohCluster automatically called function speaq_align. speaq package used perform signal alinment across individual spectra. speaq please cite: (Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMRspectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://doi.org/10.1371/journal.pcbi.1006018. spectra deconvolution process yields signals spectra. Due slight changes measurement conditions, e.g. pH variations, signal positions may vary slightly across spectra. consequence, prior analysis signals belonging compound aligned across spectra. purpose speaq package.","code":""},{"path":"/reference/dohCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dohCluster — dohCluster","text":"","code":"dohCluster(   X,   peakList,   refInd = 0,   maxShift = 100,   acceptLostPeak = TRUE,   verbose = TRUE )"},{"path":"/reference/dohCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dohCluster — dohCluster","text":"X data frame generated function gen_feat_mat require data_matix peakList data frame generated function gen_feat_mat require peakList refInd (positive integer) number reference spectrum .e. spectrum signals aligned . number automatically determined function speaq_align calls dohCluster maxShift (positive integer) maximum number points along \"ppm-axis\" value can moved speaq package e.g. 50 acceptLostPeak (logic) default TRUE verbose (logic) default TRUE","code":""},{"path":"/reference/dohCluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dohCluster — dohCluster","text":"function dohCluster speaq package rewritten compatible data generated MetaboDecon1D function gen_feat_mat return new peakList aligned spectra. Overwrite original dohCluster function speaq package. Function able return new peakList aligned spectra.","code":""},{"path":"/reference/download_example_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Download metabodecon example datasets — download_example_datasets","title":"Download metabodecon example datasets — download_example_datasets","text":"Downloads example files shipped wit metabodecon.  Due size constraints R packages, datasets included default package installed, must downloaded explicitly afterwards.","code":""},{"path":"/reference/download_example_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download metabodecon example datasets — download_example_datasets","text":"","code":"download_example_datasets()"},{"path":[]},{"path":"/reference/download_example_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download metabodecon example datasets — download_example_datasets","text":"","code":"if (FALSE) download_example_datasets()"},{"path":"/reference/gen_feat_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_feat_mat — gen_feat_mat","title":"gen_feat_mat — gen_feat_mat","text":"function generate feature matrix","code":""},{"path":"/reference/gen_feat_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_feat_mat — gen_feat_mat","text":"","code":"gen_feat_mat(data_path, ppm_range, si_size_real_spectrum, scale_factor_x)"},{"path":"/reference/gen_feat_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gen_feat_mat — gen_feat_mat","text":"data_path (string): path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution ppm_range (numeric) result function get_ppm_range .e ppm range signals distributed si_size_real_spectrum (positive integer) number real data points original spectra, e.g. 128k = 131072 data points scale_factor_x (positive integer): factor used avoid rounding errors e.g. 1000","code":""},{"path":"/reference/gen_feat_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gen_feat_mat — gen_feat_mat","text":"output function data frame containig matrix integral values found spectra (data_matrix). , row corresponds one spectrum column one data point spectra, example 128k data points spectrum correspond 128K columns data matrix. Furthermore, list signals(peakList), individual parameters signals stored data structure.","code":""},{"path":"/reference/gen_feat_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gen_feat_mat — gen_feat_mat","text":"","code":"if (FALSE) { feat <- gen_feat_mat(   data_path = data_path,   ppm_range = ppm_range,   si_size_real_spectrum=si_size_real_spectrum,   scale_factor_x=scale_factor ) }"},{"path":"/reference/generate_lorentz_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_lorentz_curves — generate_lorentz_curves","title":"generate_lorentz_curves — generate_lorentz_curves","text":"function starts actual deconvolution spectra generates detected signal Lorentz curve","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_lorentz_curves — generate_lorentz_curves","text":"","code":"generate_lorentz_curves(data_path, file_format = \"bruker\", make_rds = FALSE)"},{"path":"/reference/generate_lorentz_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_lorentz_curves — generate_lorentz_curves","text":"data_path (string) path parent folder original spectra stored. deconvolution folder also contains spectrum two .txt files contain spectrum spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution file_format (string) default bruker, supported format jcamp-dx make_rds (logic) like store results rds file, default set FALSE, set true save results many spectra evaluated therefore computing time increases","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"generate_lorentz_curves — generate_lorentz_curves","text":"First, automated curvature based signal selection performed. signal represented 3 data points allow determination initial Lorentz curves. Lorentz curves iteratively adjusted optimally approximate measured spectrum. spectrum two text files created parent folder .e. folder given data path. spectrum approximated deconvoluted signals parameter file contains numerical values deconvolution. Furthermore, numerical values deconvolution also stored data_frame.","code":""},{"path":"/reference/generate_lorentz_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate_lorentz_curves — generate_lorentz_curves","text":"","code":"if (FALSE) { data_path=c(\"C:/example_data\") spectrum_data <- generate_lorentz_curves(   data_path = data_path,   file_format = \"bruker\",   make_rds = FALSE) }"},{"path":"/reference/get_data_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve directory path of an example dataset — get_data_dir","title":"Retrieve directory path of an example dataset — get_data_dir","text":"function return path directory storing example files shipped metabodecon.","code":""},{"path":"/reference/get_data_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve directory path of an example dataset — get_data_dir","text":"","code":"get_data_dir(dataset_name = c(\"\", \"test\", \"urine\"), warn = TRUE)"},{"path":"/reference/get_data_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve directory path of an example dataset — get_data_dir","text":"dataset_name Either string, \"test\" \"urine\". warn Whether print warning message example folders yet exist, .e. download_example_datasets() called yet.","code":""},{"path":[]},{"path":"/reference/get_data_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve directory path of an example dataset — get_data_dir","text":"","code":"get_data_dir(\"urine\") #> Warning: /home/runner/.local/share/R/metabodecon/urine does not exist. Please call `download_example_datasets()` first. #> [1] \"/home/runner/.local/share/R/metabodecon/urine\""},{"path":"/reference/get_ppm_range.html","id":null,"dir":"Reference","previous_headings":"","what":"get_ppm_range — get_ppm_range","title":"get_ppm_range — get_ppm_range","text":"function get ppm range spectra, required spectra alignment following deconvolution","code":""},{"path":"/reference/get_ppm_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_ppm_range — get_ppm_range","text":"","code":"get_ppm_range(spectrum_data)"},{"path":"/reference/get_ppm_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_ppm_range — get_ppm_range","text":"spectrum_data Data frame generated function generate_lorentz_curves, contains results deconvolution spectra","code":""},{"path":"/reference/get_ppm_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_ppm_range — get_ppm_range","text":"determines deconvolution signal highest signal lowest ppm value.","code":""},{"path":"/reference/get_ppm_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_ppm_range — get_ppm_range","text":"","code":"if (FALSE) { ppm_range <- get_ppm_range(spectrum_data = spectrum_data) }"},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"MetaboDecon1D package also comprise additional function plot_lorentz_curves_save_as_png() plot original spectrum generated Lorentz curves save result png filepath.","code":""},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"","code":"plot_lorentz_curves_save_as_png(deconv_result, x_range = c(), y_range = c())"},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_lorentz_curves_save_as_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot lorentz curves for variable range — plot_lorentz_curves_save_as_png","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") plot_lorentz_curves_save_as_png(result)  # Load more spectra (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot Lorentz curves of all investigated spectra plot_lorentz_curves_save_as_png(result) # Plot Lorentz curves of one certain investigated spectrum plot_lorentz_curves_save_as_png(result$urine) }"},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"MetaboDecon1D package also comprise additional function plot_spectrum_superposition_save_as_png() plot original spectrum superposition generated Lorentz curves save result png filepath.","code":""},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"","code":"plot_spectrum_superposition_save_as_png(   deconv_result,   x_range = c(),   y_range = c() )"},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_spectrum_superposition_save_as_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spectrum approx for variable range — plot_spectrum_superposition_save_as_png","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(   filepath=\"load_example_path\",   filename=\"urine\",   file_format=\"bruker\" ) plot_spectrum_superposition_save_as_png(result)  # Load more spectra (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot superposition of Lorentz curves of all spectra plot_spectrum_superposition_save_as_png(result) # Plot superposition of Lorentz curves of one certain investigated spectrum plot_spectrum_superposition_save_as_png(result$urine) }"},{"path":"/reference/plot_triplets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot peak triplets for variable range — plot_triplets","title":"Function to plot peak triplets for variable range — plot_triplets","text":"MetaboDecon1D package also comprise additional function plot_triplets() plot peak triplets peak.","code":""},{"path":"/reference/plot_triplets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot peak triplets for variable range — plot_triplets","text":"","code":"plot_triplets(deconv_result, x_range = c(), y_range = c())"},{"path":"/reference/plot_triplets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot peak triplets for variable range — plot_triplets","text":"deconv_result Saved result MetaboDecon1D() function x_range Row vector two entries consisting ppm start ppm end value scale range x-axis (optional) y_range Row vector two entries consisting ppm start ppm end value scale range y-axis (optional)","code":""},{"path":[]},{"path":"/reference/plot_triplets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot peak triplets for variable range — plot_triplets","text":"","code":"if (FALSE) { # Load one spectrum (Bruker format) result <- MetaboDecon1D(filepath=\"load_example_path\", filename=\"urine\", file_format=\"bruker\") plot_triplets(result) # Plot part of spectrum plot_triplets(result, c(1.4,1.3), c(0,20))  # Load all spectra (Bruker format) of choosen folder result <- MetaboDecon1D(filepath=\"load_example_path\", file_format=\"bruker\") # Plot triplets of all investigated spectra plot_triplets(result) # Plot triplets of one certain investigated spectrum plot_triplets(result$urine) }"},{"path":"/reference/show_license.html","id":null,"dir":"Reference","previous_headings":"","what":"Show terms and conditions of license — show_license","title":"Show terms and conditions of license — show_license","text":"Show terms conditions license","code":""},{"path":"/reference/show_license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show terms and conditions of license — show_license","text":"","code":"show_license(...)"},{"path":"/reference/show_license.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show terms and conditions of license — show_license","text":"... used","code":""},{"path":"/reference/speaq_align.html","id":null,"dir":"Reference","previous_headings":"","what":"speaq_align — speaq_align","title":"speaq_align — speaq_align","text":"Alignment speaq. speaq package used perform signal alinment across individual spectra. speaq please cite: (Beirnaert C, Meysman P, Vu TN, Hermans N, Apers S, Pieters L, et al. (2018) speaq 2.0: complete workflow high-throughput 1D NMRspectra processing quantification. PLoS Comput Biol 14(3): e1006018. https://doi.org/10.1371/journal.pcbi.1006018. spectra deconvolution process yields signals spectra. Due slight changes measurement conditions, e.g. pH variations, signal positions may vary slightly across spectra. consequence, prior analysis signals belonging compound aligned across spectra. purpose speaq package.","code":""},{"path":"/reference/speaq_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"speaq_align — speaq_align","text":"","code":"speaq_align(feat, maxShift, spectrum_data, si_size_real_spectrum)"},{"path":"/reference/speaq_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"speaq_align — speaq_align","text":"feat (data frame) Contains data deconvoluted signals analyzed spectra alignment. maxShift (positive integer) maximum number points along \"ppm-axis\" value can moved speaq package e.g. 50. 50 suitable starting value plasma spectra digital resolution 128K. Note parameter individually optimized depending type analyzed spectra digital resolution. urine prone chemical shift variations value probably increased. spectrum_data (data frame) output generated function generate_lorentz_curves. si_size_real_spectrum (positive integer) number real data points original spectra, e.g. 128k = 131072 data points","code":""},{"path":"/reference/speaq_align.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"speaq_align — speaq_align","text":"output speaq_align data matrix aligned integral values. row contains data spectrum column corresponds one data point. entry corresponds integral deconvoluted signal signal center specific positon alignment speaq.","code":""},{"path":"/reference/speaq_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"speaq_align — speaq_align","text":"","code":"if (FALSE) { after_speaq_mat<-speaq_align(feat, maxShift) }"}]
