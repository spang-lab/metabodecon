name: Install-check
permissions: read-all

on: {
  push: {branches: [main, master]},
  pull_request: {branches: [main, master]}
}

jobs:

  test-modern-cran-install:
    runs-on: ${{ matrix.config.os }}
    name: Test modern CRAN Install (${{ matrix.config.os }}, (${{ matrix.config.r }}))
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      RUN_SLOW_TESTS: "TRUE"
    steps:

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: 'none'
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Test modern Installation from CRAN
        shell: Rscript {0}
        run: |

          cat("===============================================\n")
          cat("1. Ensure we have no pre-installed dependencies\n")
          cat("===============================================\n")
          x <- rownames(installed.packages())
          if ("impute" %in% x) {
              cat("Removing impute\n")
              remove.packages("impute")
          }
          if ("MassSpecWavelet" %in% x) {
              cat("Removing MassSpecWavelet\n")
              remove.packages("MassSpecWavelet")
          }
          if (!"pkgbuild" %in% x) {
              cat("Installing pkgbuild\n")
              install.packages("pkgbuild")
          }
          if (pkgbuild::has_rtools()) {
            rtools <- pkgbuild::rtools_path()
            while (grepl("rtools", dirname(rtools))) rtools <- dirname(rtools)
            if (dir.exists(rtools)) {
                rtools_bak <- gsub("rtools", "rtoolsBAK", rtools)
                cat("Trying to rename", rtools, "to", rtools_bak, "\n")
                x <- try(file.rename(rtools, rtools_bak), silent = TRUE)
                cat(if (inherits(x, "try-error")) "Rename failed\n" else "Rename successful\n")
            } else {
                cat("Rtools not available. Nice. \n")
            }
          }

          cat("===============================================\n")
          cat("2. Install pak\n")
          cat("===============================================\n")
          install.packages("pak")

          cat("===============================================\n")
          cat("3. Install metabodecon\n")
          cat("===============================================\n")
          pak::pkg_install("metabodecon")

  test-oldschool-cran-install:
    runs-on: ${{ matrix.config.os }}
    name: Test old-school CRAN Install (${{ matrix.config.os }}, (${{ matrix.config.r }}))
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      RUN_SLOW_TESTS: "TRUE"
    steps:

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: 'none'
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Test old-school Installation from CRAN
        shell: Rscript {0}
        run: |

          cat("===============================================\n")
          cat("1. Ensure we have no pre-installed dependencies\n")
          cat("===============================================\n")
          x <- rownames(installed.packages())
          if ("impute" %in% x) {
              cat("Removing impute\n")
              remove.packages("impute")
          }
          if ("MassSpecWavelet" %in% x) {
              cat("Removing MassSpecWavelet\n")
              remove.packages("MassSpecWavelet")
          }
          if (!"pkgbuild" %in% x) {
              cat("Installing pkgbuild\n")
              install.packages("pkgbuild")
          }
          if (pkgbuild::has_rtools()) {
            rtools <- pkgbuild::rtools_path()
            while (grepl("rtools", dirname(rtools))) rtools <- dirname(rtools)
            if (dir.exists(rtools)) {
                rtools_bak <- gsub("rtools", "rtoolsBAK", rtools)
                cat("Trying to rename", rtools, "to", rtools_bak, "\n")
                x <- try(file.rename(rtools, rtools_bak), silent = TRUE)
                cat(if (inherits(x, "try-error")) "Rename failed\n" else "Rename successful\n")
            } else {
                cat("Rtools not available. Nice. \n")
            }
          }

          cat("===============================================\n")
          cat("2. Install pak\n")
          cat("===============================================\n")
          install.packages("pak")

          cat("===============================================\n")
          cat("3. Install metabodecon\n")
          cat("===============================================\n")
          install.packages("BiocManager")
          BiocManager::install(c("MassSpecWavelet", "impute"))
          install.packages("metabodecon")


  test-github-install:
    runs-on: ${{ matrix.config.os }}
    name: Test Github Install (${{ matrix.config.os }}, (${{ matrix.config.r }}))
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      RUN_SLOW_TESTS: "TRUE"
    steps:

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: 'none'
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Test Installation from Github
        shell: Rscript {0}
        run: |

          cat("===============================================\n")
          cat("1. Ensure we have no pre-installed dependencies\n")
          cat("===============================================\n")
          x <- rownames(installed.packages())
          if ("impute" %in% x) {
              cat("Removing impute\n")
              remove.packages("impute")
          }
          if ("MassSpecWavelet" %in% x) {
              cat("Removing MassSpecWavelet\n")
              remove.packages("MassSpecWavelet")
          }
          if (!"pkgbuild" %in% x) {
              cat("Installing pkgbuild\n")
              install.packages("pkgbuild")
          }
          if (pkgbuild::has_rtools()) {
            rtools <- pkgbuild::rtools_path()
            while (grepl("rtools", dirname(rtools))) rtools <- dirname(rtools)
            if (dir.exists(rtools)) {
                rtools_bak <- gsub("rtools", "rtoolsBAK", rtools)
                cat("Trying to rename", rtools, "to", rtools_bak, "\n")
                x <- try(file.rename(rtools, rtools_bak), silent = TRUE)
                cat(if (inherits(x, "try-error")) "Rename failed\n" else "Rename successful\n")
            } else {
                cat("Rtools not available. Nice. \n")
            }
          }

          cat("===============================================\n")
          cat("2. Install pak\n")
          cat("===============================================\n")
          install.packages("pak")

          cat("===============================================\n")
          cat("3. Install metabodecon\n")
          cat("===============================================\n")
          pak::pkg_install("spang-lab/metabodecon")
